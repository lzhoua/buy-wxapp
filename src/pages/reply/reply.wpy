<template>
  <view class='p-publish-body'>
    <view class="ipt-content">
      <textarea
        value="{{content}}"
        class="pub-textarea"
        bindinput="bindContentInput"
        maxlength="150"
        placeholder="{{placeholder}}"
        placeholder-class="placeholder-class"/>
      <view class="limit-area fs-28">{{content.length}}/150</view>
    </view>
    <!-- 添加图片 -->
    <!-- <view 
      class="add-image"
      wx:if="{{query.type === 'article'}}"
      >
      <block wx:for="{{imageList}}"
        wx:key="{{index}}">
        <view class="img-box">
          <image
            mode="aspectFill"
            class="add-icon" 
            src="{{item}}"/>
          <view
            @tap="deletImage({{index}})"
            class="delet-image-box"><text class="delet-image">x</text></view>
        </view>
      </block>
      <view wx:if="{{imageList.length < 6}}" class="img-box">
        <image
          @tap="bindAddImage"
          class="add-icon" 
          src="/assets/image/add-image.svg"/>
      </view>
      <view></view>
    </view> -->
    <!-- 按钮 -->
    <button 
      @tap="uesrReply"
      hover-class="hover-class"
      class="public-btn fs-30">回复</button>
  </view>
</template>

<script>
import wepy from 'wepy'
export default class Reply extends wepy.page {
  config = {
    navigationBarTitleText: '回复评论'
  }
  data = {
    content: '',
    imageList: [],
    placeholder: '',
    query: void 0
  }
  onLoad (query) {
    this.placeholder = query.type === 'user'
    ? `回复 ${query.main_nickname}:`
    : `请输入回帖内容`
    this.query = query
    this.$apply()
  }

  uesrReply() {
    if (!this.content.length) {
      wepy.Alert.toast('请输入回复内容')
      return
    }
    this.query.type === 'user'
    ? this.setSideComment(this.query)
    : this.setTieziComment(this.query)
  }

  // 回复帖子
  async setTieziComment (query) {
    wepy.Alert.loading('回复中')
    try {
      await wepy.fetch({
        ...wepy.$api.mainComment,
        data: {
          tiezi_id: query.tiezi_id,
          main_openor: wepy.userInfo.userid,
          to_man: query.to_man,
          com_content: this.content
        }
      })
      wepy.Alert.success('回复成功')
      wepy.navigateBack()
    } catch (error) {
      wepy.Alert.error('回复失败')
      console.log('------>', error)
    }
  }

  // 回复评论
  async setSideComment (query) {
    wepy.Alert.loading('回复中')
    try {
      await wepy.fetch({
        ...wepy.$api.sideComment,
        data: {
          main_comment_id: query.main_comment_id,
          tiezi_id: query.tiezi_id,
          side_openor: wepy.userInfo.userid,
          to_man: query.to_man,
          side_com_content: this.content
        }
      })
      wepy.Alert.success('回复成功')
      wepy.navigateBack()
    } catch (error) {
      wepy.Alert.error('回复失败')
      console.log('------>', error)
    }
  }

  methods = {
    deletImage (index) {
      this.imageList.splice(index, 1)
    },
    async bindAddImage () {
      let count = 6 - this.imageList.length
      try {
        let image = (await wepy.chooseImage({
          count: count,
          sizeType: ['compressed'],
          sourceType: ['album', 'camera']
        })).tempFilePaths
        this.imageList = this.imageList.concat(image)
        this.$apply()
      } catch (error) {

      }
    },
    bindContentInput (e) {
      this.content = e.detail.value
    }
  }
  watch = {}
}
</script>

<style lang='scss'>
page {
  background-color: #ececec;
}
.p-publish-body {
  // .put-box {
  //   position: relative;
  //   .ipt-title {
  //     padding: 0 90rpx 0 30rpx;
  //     box-sizing: border-box;
  //     width: 750rpx;
  //     height: 80rpx;
  //     border-bottom: thin solid #eeeeee;
  //     background-color: #fff;
  //   }
  //   .limit-text {
  //     position: absolute;
  //     top: 20rpx;
  //     right: 10rpx;
  //     color: #999;
  //   }
  // }
  .ipt-content {
    position: relative;
    .pub-textarea {
      width: 750rpx;
      height: 400rpx;
      background-color: #fff;
      padding: 10rpx 30rpx 40rpx;
      box-sizing: border-box;
    }
    .limit-area {
      position: absolute;
      bottom: 10rpx;
      right: 10rpx;
      color: #999999;
    }
  }
  .add-image {
    width: 750rpx;
    padding: 0 10rpx 0 30rpx;
    box-sizing: border-box;
    background-color: #fff;
    display: flex;
    flex-wrap: wrap;
    .img-box {
      width: 100rpx;
      height: 100rpx;
      border-radius: 6rpx;
      margin: 0 10rpx 10rpx 0;
      position: relative;
      .delet-image-box {
        padding: 0rpx 5rpx 0 10rpx;
        position: absolute;
        top: -20rpx;
        right: -4rpx;
        .delet-image {
          width: 28rpx;
          height: 28rpx;
          display: inline-block;
          line-height: 24rpx;
          text-align: center;
          font-size: 24rpx;
          color: #fff;
          background-color: rgba(0, 0, 0, 0.8);
          border-radius: 50%;
        }
      }
      .add-icon {
        width: 100rpx;
        height: 100rpx;
      }
    }
  }
  .public-btn {
    width: 690rpx;
    height: 80rpx;
    background-color: #4f52e4;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 40rpx;
  }
}
</style>
