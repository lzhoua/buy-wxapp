<template>
  <view class='reply-box'>
    <view class="reply-user">
      <image class="reply-avator" src="{{item.from_main_avatarurl}}"/>
      <view class="reply-name fs-28">{{item.from_main_nickname}}</view>
    </view>
    <view class="user-text fs-28">{{item.com_content}}</view>
    <view class="foot-do fs-22">
      <view
        data-main_nickname="{{item.from_main_nickname}}"
        data-main_comment_id="{{item.id}}"
        data-tiezi_id="{{item.tiezi_id}}"
        data-to_man="{{item.main_openor}}"
        @tap="goPage"
        class="do-item">
        <image class="do-icon" src="/assets/image/reply-icon.png" /> 
        评论
      </view>
      <view @tap="goodSelect({{item.id}})" class="do-item">
        <image class="do-icon" src="{{item.isgood_forcomment * 1 !== 1 ? '/assets/image/good.png' : '/assets/image/good-active.png'}}" /> 
        {{item.good_num}}
      </view>
    </view>

    <!-- 回复评论 -->
    <view class="re-by-re-box" wx:if="{{item.sidecomments.length}}">
      <view 
        class="byre-item fs-22"
        wx:for="{{item.sidecomments}}"
        wx:for-item="side"
        wx:key="{{side.id}}">
        <text style="color: #5069c2">{{side.from_side_nickname}}</text>
        ：{{side.side_com_content}}
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import router from '@/config/routes.js'
export default class Reply extends wepy.component {
  props = {
    item: Object
  }
  data = {}
  onLoad () {}

  // 点赞
  async postGood (id) {
    try {
      await wepy.fetch({
        ...wepy.$api.setGoodComment,
        data: {
          maincomment_id: id,
          make_good_man: wepy.userInfo.userid
        }
      })
    } catch (error) {
      console.log('------>', error)
    }
  }
  methods = {
    goodSelect (id) {
      // 写的很乱很快，懒得登录判断封装在接口了，直接乱写吧
      if (!wepy.userInfo) {
        wepy.navigateTo({url: router.authorization})
        return
      }
      if (this.item.isgood_forcomment) {
        this.item.isgood_forcomment = 0
        this.item.good_num = this.item.good_num - 1
      } else {
        this.item.isgood_forcomment = 1
        this.item.good_num = this.item.good_num + 1
      }
      this.postGood(id)
      this.$apply()
    },
    goPage (e) {
      if (!wepy.userInfo) {
        wepy.navigateTo({url: router.authorization})
        return
      }
      const data = e.currentTarget.dataset
      const obj = {
        type: 'user',
        main_nickname: data.main_nickname,
        main_comment_id: data.main_comment_id,
        tiezi_id: data.tiezi_id,
        to_man: data.to_man
      }
      let params = ''
      Object.keys(obj).map(key => {
        params = `${params}${key}=${obj[key]}&&`
      })
      params = params.slice(0, -2)
      wepy.navigateTo({url: `${router.reply}?${params}`})
    }
  }
  watch = {}
}
</script>

<style lang='scss'>
.reply-box {
  padding: 30rpx 0;
  border-bottom: thin solid #ccc;
  .reply-user {
    display: flex;
    align-items: center;
    .reply-avator {
      width: 60rpx;
      height: 60rpx;
      border-radius: 50%;
      margin-right: 20rpx;
      background-color: #ccc;
    }
  }
  .user-text {
    padding: 30rpx 0;
  }
  .foot-do {
    display: flex;
    justify-content: flex-end;
    .do-item {
      display: flex;
      align-items: center;
      margin-left: 40rpx;
      color: #888;
    }
    .do-icon {
      width: 30rpx;
      height: 30rpx;
      // background-color: #ccc;
      margin-right: 5rpx;
    }
  }
  .re-by-re-box {
    width: 670rpx;
    margin-top: 20rpx;
    padding: 20rpx;
    box-sizing: border-box;
    background-color: #f5f3fa;
    border-radius: 8rpx;
    .byre-item {
      color: #424242;
      margin-top: 10rpx;
    }
  }
}
</style>
